<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <link rel="icon" href="/favicon.png" type="image/x-icon">
  <link href="https://cdn.jsdelivr.net/npm/remixicon@4.5.0/fonts/remixicon.css" rel="stylesheet" />
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      darkMode: 'class',
      theme: {
        extend: {
            screens: {
               lon: "1146px", // Example from previous context
            },
        },
      },
    };
  </script>
  <link rel="preconnect" href="https://fonts.googleapis.com" />
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
  <link href="https://fonts.googleapis.com/css2?family=Roboto+Condensed:ital,wght@0,100..900;1,100..900&display=swap" rel="stylesheet" />

  <title><%= filename.split(".")[0] %> Hisaab | KhaataBook</title>
  <style>
    body {
      transition: background-color 0.3s ease, color 0.3s ease;
    }
    /* Smooth transition for mobile menu panel */
    #mobile-menu-panel {
      transition: transform 0.3s ease-in-out;
    }
    /* Styling for preformatted content */
    .hisaab-content-pre {
        font-family: 'Roboto Condensed', Menlo, Monaco, Consolas, "Courier New", monospace; /* Consistent font, fallback to mono */
        line-height: 1.6;
        tab-size: 4; /* Or 2, depending on preference */
    }
  </style>
</head>

<body class="bg-zinc-100 dark:bg-zinc-900 text-zinc-900 dark:text-zinc-100 font-['Roboto_Condensed']">
  <div class="flex flex-col w-full min-h-screen">
    <nav class="flex-shrink-0 w-full h-auto min-h-[8vh] bg-white dark:bg-zinc-800 shadow-md px-4 sm:px-6 lg:px-10 py-3 flex items-center justify-between">
      <a href="/" class="text-2xl font-semibold text-blue-600 dark:text-blue-400 sm:text-3xl">KhaataBook</a>

      <ul class="hidden gap-y-2 gap-x-5 items-center lg:flex">
        <li><a class="text-sm font-medium transition-colors text-zinc-700 underline-offset-4 hover:underline dark:text-zinc-300 sm:text-base hover:text-blue-600 dark:hover:text-blue-400" href="/">Home</a></li>
        <li><a class="text-sm font-medium transition-colors text-zinc-700 underline-offset-4 hover:underline dark:text-zinc-300 sm:text-base hover:text-blue-600 dark:hover:text-blue-400" href="/create">Create Hisaab</a></li>
        <li><a class="text-sm font-medium transition-colors text-zinc-700 underline-offset-4 hover:underline dark:text-zinc-300 sm:text-base hover:text-blue-600 dark:hover:text-blue-400" href="/logout">Logout</a></li>
        <li>
          <label class="inline-flex relative items-center cursor-pointer">
            <input class="sr-only peer" id="toggle-theme" type="checkbox" />
            <div class="relative w-[70px] sm:w-[80px] h-[30px] sm:h-[35px] bg-zinc-200 dark:bg-zinc-700 peer-checked:bg-zinc-600 rounded-full
                        after:absolute after:content-[''] after:w-[25px] sm:after:w-[30px] after:h-[25px] sm:after:h-[30px]
                        after:bg-gradient-to-r after:from-orange-500 after:to-yellow-400
                        peer-checked:after:from-zinc-800 peer-checked:after:to-zinc-900
                        after:rounded-full after:top-[2.5px] sm:after:top-[2.5px] after:left-[5px]
                        peer-checked:after:translate-x-[calc(100%+10px)] sm:peer-checked:after:translate-x-[calc(100%+12px)]
                        shadow-inner after:shadow-md transition-all duration-300 after:transition-all after:duration-300">
            </div>
            <svg class="fill-zinc-100 absolute w-4 sm:w-5 h-4 sm:h-5 left-[8px] sm:left-[10px] top-1/2 -translate-y-1/2 opacity-100 peer-checked:opacity-0 transition-opacity duration-300" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path d="M12,17c-2.76,0-5-2.24-5-5s2.24-5,5-5,5,2.24,5,5-2.24,5-5,5ZM13,0h-2V5h2V0Zm0,19h-2v5h2v-5ZM5,11H0v2H5v-2Zm19,0h-5v2h5v-2Zm-2.81-6.78l-1.41-1.41-3.54,3.54,1.41,1.41,3.54-3.54ZM7.76,17.66l-1.41-1.41-3.54,3.54,1.41,1.41,3.54-3.54Zm0-11.31l-3.54-3.54-1.41,1.41,3.54,3.54,1.41-1.41Zm13.44,13.44l-3.54-3.54-1.41,1.41,3.54,3.54,1.41-1.41Z"></path>
            </svg>
            <svg class="fill-slate-300 absolute w-4 sm:w-5 h-4 sm:h-5 right-[8px] sm:right-[10px] top-1/2 -translate-y-1/2 opacity-0 peer-checked:opacity-100 transition-opacity duration-300" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path d="M12.009,24A12.067,12.067,0,0,1,.075,10.725,12.121,12.121,0,0,1,10.1.152a13,13,0,0,1,5.03.206,2.5,2.5,0,0,1,1.8,1.8,2.47,2.47,0,0,1-.7,2.425c-4.559,4.168-4.165,10.645.807,14.412h0a2.5,2.5,0,0,1-.7,4.319A13.875,13.875,0,0,1,12.009,24Zm.074-22a10.776,10.776,0,0,0-1.675.127,10.1,10.1,0,0,0-8.344,8.8A9.928,9.928,0,0,0,4.581,18.7a10.473,10.473,0,0,0,11.093,2.734.5.5,0,0,0,.138-.856h0C9.883,16.1,9.417,8.087,14.865,3.124a.459.459,0,0,0,.127-.465.491.491,0,0,0-.356-.362A10.68,10.68,0,0,0,12.083,2ZM20.5,12a1,1,0,0,1-.97-.757l-.358-1.43L17.74,9.428a1,1,0,0,1,.035-1.94l1.4-.325.351-1.406a1,1,0,0,1,1.94,0l.355,1.418,1.418.355a1,1,0,0,1,0,1.94l-1.418.355-.355,1.418A1,1,0,0,1,20.5,12ZM16,14a1,1,0,0,0,2,0A1,1,0,0,0,16,14Zm6,4a1,1,0,0,0,2,0A1,1,0,0,0,22,18Z"></path>
            </svg>
          </label>
        </li>
      </ul>

      <div class="flex gap-3 items-center lg:hidden">
        <label class="inline-flex relative items-center cursor-pointer">
          <input class="sr-only peer" id="toggle-theme-mobile" type="checkbox" />
           <div class="relative w-[60px] h-[28px] bg-zinc-200 dark:bg-zinc-700 peer-checked:bg-zinc-600 rounded-full
                      after:absolute after:content-[''] after:w-[22px] after:h-[22px]
                      after:bg-gradient-to-r after:from-orange-500 after:to-yellow-400
                      peer-checked:after:from-zinc-800 peer-checked:after:to-zinc-900
                      after:rounded-full after:top-[3px] after:left-[4px]
                      peer-checked:after:translate-x-[calc(100%+6px)]
                      shadow-inner after:shadow-md transition-all duration-300 after:transition-all after:duration-300">
          </div>
        </label>
        <button id="mobile-menu-btn" class="p-2 rounded-md transition-colors text-zinc-700 dark:text-zinc-300 hover:bg-zinc-200 dark:hover:bg-zinc-700" aria-label="Toggle menu">
          <i id="menu-icon" class="text-2xl ri-menu-fill"></i>
        </button>
      </div>
    </nav>

    <div id="mobile-menu-overlay" class="hidden fixed inset-0 z-40 lg:hidden bg-black/50 dark:bg-black/70" aria-hidden="true"></div>
    <div id="mobile-menu-panel" class="fixed top-0 right-0 z-50 w-72 h-full bg-white shadow-xl transform translate-x-full lg:hidden dark:bg-zinc-800">
      <div class="p-5">
        <div class="flex justify-between items-center mb-6">
            <span class="text-lg font-semibold text-blue-600 dark:text-blue-400">Menu</span>
            <button id="close-menu-btn" class="p-2 rounded-md transition-colors text-zinc-600 dark:text-zinc-400 hover:text-red-500 dark:hover:text-red-400" aria-label="Close menu">
              <i class="text-2xl ri-close-large-line"></i>
            </button>
        </div>
        <ul class="flex flex-col gap-2">
          <li><a class="block px-3 py-3 font-medium rounded-md transition-colors text-zinc-700 dark:text-zinc-300 hover:bg-zinc-100 dark:hover:bg-zinc-700" href="/">Home</a></li>
          <li><a class="block px-3 py-3 font-medium rounded-md transition-colors text-zinc-700 dark:text-zinc-300 hover:bg-zinc-100 dark:hover:bg-zinc-700" href="/create">Create Hisaab</a></li>
          <li><a class="block px-3 py-3 font-medium rounded-md transition-colors text-zinc-700 dark:text-zinc-300 hover:bg-zinc-100 dark:hover:bg-zinc-700" href="/logout">Logout</a></li>
        </ul>
      </div>
    </div>

    <main class="flex-grow p-4 sm:p-6 lg:p-10">
      <div class="mx-auto max-w-5xl">
        <div class="mb-8">
            <a href="/" class="inline-flex gap-2 items-center mb-4 text-sm text-blue-600 dark:text-blue-400 hover:underline">
                <i class="ri-arrow-left-line"></i> Back to Home
            </a>
            <h1 class="text-2xl font-semibold sm:text-3xl lg:text-4xl text-zinc-800 dark:text-zinc-100">
                <%= filename.split(".")[0].replace(/_/g, ' ').replace(/\b\w/g, l => l.toUpperCase()) %>
            </h1>
        </div>

        <div class="p-4 mb-8 bg-white rounded-xl shadow-lg dark:bg-zinc-800 sm:p-6">
            <div class="flex flex-col gap-4 md:flex-row md:items-center md:justify-between">
                <div class="flex flex-wrap gap-3 items-center">
                    <span class="px-3.5 py-1.5 text-xs sm:text-sm font-semibold text-white rounded-full flex items-center gap-1.5
                        <% if (isEncrypted) { %> bg-red-600 dark:bg-red-500 <% } else { %> bg-green-600 dark:bg-green-500 <% } %>">
                        <% if (isEncrypted) { %><i class="ri-lock-fill"></i> Encrypted <% } else { %><i class="ri-lock-unlock-fill"></i> Available <% } %>
                    </span>
                    <span class="px-3.5 py-1.5 text-xs sm:text-sm font-semibold text-white rounded-full flex items-center gap-1.5
                        <% if (isShareable) { %> bg-sky-600 dark:bg-sky-500 <% } else { %> bg-amber-600 dark:bg-amber-500 <% } %>">
                        <% if (isShareable) { %><i class="ri-share-fill"></i> Shareable <% } else { %><i class="ri-eye-off-fill"></i> Private <% } %>
                    </span>
                </div>
                <div class="flex gap-3 items-center mt-4 md:mt-0">
                    <a href="/edit/<%= filename %>" class="px-4 py-2.5 text-sm font-medium bg-teal-600 hover:bg-teal-700 text-white rounded-lg transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98] flex items-center gap-2">
                        <i class="ri-edit-box-line"></i> Edit
                    </a>
                    <a href="/delete/<%= filename %>" onclick="return confirm('Are you sure you want to delete this Hisaab? This action cannot be undone.');" class="px-4 py-2.5 text-sm font-medium bg-red-600 hover:bg-red-700 text-white rounded-lg transition-all duration-300 transform hover:scale-[1.02] active:scale-[0.98] flex items-center gap-2">
                        <i class="ri-delete-bin-6-line"></i> Delete
                    </a>
                </div>
            </div>
            <p class="mt-4 text-xs sm:text-sm text-zinc-500 dark:text-zinc-400" id="created-date-container">
              <i class="align-middle ri-calendar-2-line"></i> Created: <span class="font-medium" data-date="<%= createdAt %>"><%= createdAt %></span>
            </p>
        </div>

        <div class="space-y-6">
          <div class="overflow-hidden bg-white rounded-xl shadow-lg dark:bg-zinc-800">
            <div class="px-6 py-4 border-b border-zinc-200 dark:border-zinc-700">
              <h3 class="text-lg font-semibold text-zinc-800 dark:text-zinc-100">Title</h3>
            </div>
            <div class="p-6">
              <p class="text-base break-words text-zinc-900 dark:text-zinc-100">
                <%= title %>
              </p>
            </div>
          </div>

          <div class="overflow-hidden bg-white rounded-xl shadow-lg dark:bg-zinc-800">
            <div class="px-6 py-4 border-b border-zinc-200 dark:border-zinc-700">
              <h3 class="text-lg font-semibold text-zinc-800 dark:text-zinc-100">Content Details</h3>
            </div>
            <div class="p-6">
              <div class="min-h-[200px] max-h-[60vh] overflow-y-auto bg-zinc-50 dark:bg-zinc-900/50 p-4 rounded-md border border-zinc-200 dark:border-zinc-700">
                <pre class="whitespace-pre-wrap break-words text-zinc-800 dark:text-zinc-200 hisaab-content-pre"><%= data %></pre>
              </div>
            </div>
          </div>
        </div>
      </div>
    </main>
  </div>

  <script>
    document.addEventListener("DOMContentLoaded", () => {
      // Mobile Menu Toggle
      const mobileMenuBtn = document.getElementById('mobile-menu-btn');
      const mobileMenuOverlay = document.getElementById('mobile-menu-overlay');
      const mobileMenuPanel = document.getElementById('mobile-menu-panel');
      const closeMenuBtn = document.getElementById('close-menu-btn');
      const menuIcon = document.getElementById('menu-icon');

      function openMobileMenu() {
        mobileMenuOverlay.classList.remove('hidden');
        mobileMenuPanel.classList.remove('translate-x-full');
        menuIcon.className = 'ri-close-large-line text-2xl';
        document.body.style.overflow = 'hidden'; // Prevent background scroll
      }

      function closeMobileMenu() {
        mobileMenuPanel.classList.add('translate-x-full');
        mobileMenuOverlay.classList.add('hidden');
        menuIcon.className = 'ri-menu-fill text-2xl';
        document.body.style.overflow = ''; // Restore background scroll
      }

      if (mobileMenuBtn) mobileMenuBtn.addEventListener('click', openMobileMenu);
      if (closeMenuBtn) closeMenuBtn.addEventListener('click', closeMobileMenu);
      if (mobileMenuOverlay) {
        mobileMenuOverlay.addEventListener('click', (e) => {
          if (e.target === mobileMenuOverlay) {
            closeMobileMenu();
          }
        });
      }

      // Date Formatting
      const dateElement = document.querySelector('[data-date]');
      if (dateElement) {
          try {
              const rawDate = dateElement.dataset.date;
              if (rawDate) {
                  dateElement.textContent = new Date(rawDate).toLocaleDateString('en-US', {
                      year: 'numeric', month: 'long', day: 'numeric', hour: '2-digit', minute: '2-digit'
                  });
              }
          } catch (e) {
              console.error('Error formatting date:', e);
              // Keep original text if formatting fails
          }
      }

      // Theme Management (Consistent Script)
      const desktopToggle = document.getElementById("toggle-theme");
      const mobileToggle = document.getElementById("toggle-theme-mobile");

      const applyThemePreference = (isDark) => {
          document.documentElement.classList.toggle("dark", isDark);
          if (desktopToggle) desktopToggle.checked = isDark;
          if (mobileToggle) mobileToggle.checked = isDark;
      };
      const initTheme = () => {
          const savedTheme = localStorage.theme;
          const systemPrefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
          applyThemePreference(savedTheme === "dark" || (!savedTheme && systemPrefersDark));
      };
      initTheme();
      const handleThemeToggle = (event) => {
          const isDark = event.target.checked;
          localStorage.theme = isDark ? "dark" : "light";
          applyThemePreference(isDark);
      };
      if (desktopToggle) desktopToggle.addEventListener("click", handleThemeToggle);
      if (mobileToggle) mobileToggle.addEventListener("click", handleThemeToggle);
    });
  </script>
</body>
</html>